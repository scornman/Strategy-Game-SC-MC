X StrategyGameFactory.makeBetaStrategyGame creates a BetaStrategyGameController when given valid 	configurations.
X StrategyGameFactory.makeBetaStrategyGame throws a StrategyException if any piece in the given configuration 	is not at one of the valid starting locations.
X StrategyGameFactory.makeBetaStrategyGame throws a StrategyException if 2 pieces in the starting configuration have the same location
X StrategyGameFactory.makeBetaStrategyGame throws a StrategyException if the starting configuration for each color does not contain 12 pieces.
X StrategyGameFactory.makeBetaStrategyGame throws a StrategyException if the starting configuration for each 	color does not contain 1 flag, 1 marshal, 2 colonels, 2 captains, 3 lieutanants, and 3 sergeants.
X getPieceAt returns null if there is no piece at the specified location.
X getPieceAt throws exception if given an invalid location.
X getPieceAt returns a valid piece when supplied with a valid location containing that piece.
X startGame throws a StrategyException if the game has already started.
X move throws a StrategyException if the game has not yet been started.
X move throws a StrategyException if the specified 'from' location is not a valid location.
X move throws a StrategyException if the specified 'to' location is not a valid location.
X move throws a StrategyException if the specified pieceType is null.

X move throws a StrategyException if the specified 'from' location does not contain a piece.
X move throws a StrategyException if the specified 'from' location does not contain a piece of the specified 	type.
X move throws a StrategyException if the piece in the specified from location does not match the color of the 	player whose turn it is.
X move throws a StrategyException if the piece to be moved is not moveable. (i.e. is the flag)
X move throws a StrategyException if a piece attempts to move into a location occupied by another piece of the 	same color.
X after move is called with valid parameters, including an empty 'to' location, getPieceAt on the 'to' location should return the piece that moved.
- After 12 moves have been made in a game (6 for each player), the final move should result in a DRAW.
- If a piece moves into an empty space, the returned MoveResult should have a null battleWinner.
- If a red piece moves into a location containing the blue flag, the game should end in RED_WINS.
- If the game has ended, startGame should start a new game.

- If a red piece moves into a location containing a blue piece of lower rank, the moveResult's battleWinner contains the red piece and the former location of the blue piece. The blue piece is removed from the board.
- If a red piece moves into a location containing a blue piece of higher rank, the moveResult's battleWinner 	contains the blue piece and the former location of the red piece. The red piece is removed from the board.
- After the factory method creates a controller with a given configuration, getPieceAt() for one of the given 	locations should return the corresponding piece in the configuration.
- StrategyGameFactory.makeBetaStrategyGame throws a StrategyException if either starting configuration is null.
- StrategyGameFactory.makeAlphaStragegyGame actually works.